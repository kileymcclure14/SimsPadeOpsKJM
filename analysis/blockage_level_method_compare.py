import analysis_utils as au
from pathlib import Path
import os
import math
import padeopsIO as pio
# from pathlib import Path
import matplotlib.pyplot as plt
from scipy.signal import find_peaks
import numpy as np
from padeopsIO import turbine

#Import data
#Cp
cp_prime_h_cor_ph = np.load("cp_prime_h_cor_ph.npy")
cp_prime_h_ph = np.load("cp_prime_h_ph.npy")
cp_prime_hblock_cor_gl = np.load("cp_prime_hblock_cor_gl.npy")
cp_prime_hblock_cor_ms = np.load("cp_prime_hblock_cor_ms.npy")
cp_prime_hblock_gl = np.load("cp_prime_hblock_gl.npy")
cp_prime_hblock_ms = np.load("cp_prime_hblock_ms.npy")
cp_prime_m_cor_ph = np.load("cp_prime_m_cor_ph.npy")
cp_prime_m_ph = np.load("cp_prime_m_ph.npy")
cp_prime_mblock_cor_gl = np.load("cp_prime_mblock_cor_gl.npy")
cp_prime_mblock_cor_ms = np.load("cp_prime_mblock_cor_ms.npy")
cp_prime_mblock_gl = np.load("cp_prime_mblock_gl.npy")
cp_prime_mblock_ms = np.load("cp_prime_mblock_ms.npy")

print(f"{cp_prime_hblock_ms}")
#Ct
ct_prime_h_cor_ph = np.load("ct_prime_h_cor_ph.npy")
ct_prime_h_ph = np.load("ct_prime_h_ph.npy")
ct_prime_hblock_cor_gl = np.load("ct_prime_hblock_cor_gl.npy")
ct_prime_hblock_cor_ms = np.load("ct_prime_hblock_cor_ms.npy")
ct_prime_hblock_gl = np.load("ct_prime_hblock_gl.npy")
ct_prime_hblock_ms = np.load("ct_prime_hblock_ms.npy")
ct_prime_m_cor_ph = np.load("ct_prime_m_cor_ph.npy")
ct_prime_m_ph = np.load("ct_prime_m_ph.npy")
ct_prime_mblock_cor_gl = np.load("ct_prime_mblock_cor_gl.npy")
ct_prime_mblock_cor_ms = np.load("ct_prime_mblock_cor_ms.npy")
ct_prime_mblock_gl = np.load("ct_prime_mblock_gl.npy")
ct_prime_mblock_ms = np.load("ct_prime_mblock_ms.npy")

#Set Up new Blockage Arrays
#Cp
cp_prime_neg3_5_gl = np.array([cp_prime_mblock_gl[0], cp_prime_hblock_gl[0]])
cp_prime_neg3_5_ms = np.array([cp_prime_mblock_ms[0], cp_prime_hblock_ms[0]])
cp_prime_neg3_5_ph = np.array([cp_prime_m_ph[0], cp_prime_h_ph[0]])
cp_prime_neg3_5_cor_gl = np.array([cp_prime_mblock_cor_gl[0], cp_prime_hblock_cor_gl[0]])
cp_prime_neg3_5_cor_ms = np.array([cp_prime_mblock_cor_ms[0], cp_prime_hblock_cor_ms[0]])
cp_prime_neg3_5_cor_ph = np.array([cp_prime_m_cor_ph[0], cp_prime_h_cor_ph[0]])

cp_prime_neg3_gl = np.array([cp_prime_mblock_gl[1], cp_prime_hblock_gl[1]])
cp_prime_neg3_ms = np.array([cp_prime_mblock_ms[1], cp_prime_hblock_ms[1]])
cp_prime_neg3_ph = np.array([cp_prime_m_ph[1], cp_prime_h_ph[1]])
cp_prime_neg3_cor_gl = np.array([cp_prime_mblock_cor_gl[1], cp_prime_hblock_cor_gl[1]])
cp_prime_neg3_cor_ms = np.array([cp_prime_mblock_cor_ms[1], cp_prime_hblock_cor_ms[1]])
cp_prime_neg3_cor_ph = np.array([cp_prime_m_cor_ph[1], cp_prime_h_cor_ph[1]])

cp_prime_neg2_5_gl = np.array([cp_prime_mblock_gl[2], cp_prime_hblock_gl[2]])
cp_prime_neg2_5_ms = np.array([cp_prime_mblock_ms[2], cp_prime_hblock_ms[2]])
cp_prime_neg2_5_ph = np.array([cp_prime_m_ph[2], cp_prime_h_ph[2]])
cp_prime_neg2_5_cor_gl = np.array([cp_prime_mblock_cor_gl[2], cp_prime_hblock_cor_gl[2]])
cp_prime_neg2_5_cor_ms = np.array([cp_prime_mblock_cor_ms[2], cp_prime_hblock_cor_ms[2]])
cp_prime_neg2_5_cor_ph = np.array([cp_prime_m_cor_ph[2], cp_prime_h_cor_ph[2]])

cp_prime_neg2_gl = np.array([cp_prime_mblock_gl[3], cp_prime_hblock_gl[3]])
cp_prime_neg2_ms = np.array([cp_prime_mblock_ms[3], cp_prime_hblock_ms[3]])
cp_prime_neg2_ph = np.array([cp_prime_m_ph[3], cp_prime_h_ph[3]])
cp_prime_neg2_cor_gl = np.array([cp_prime_mblock_cor_gl[3], cp_prime_hblock_cor_gl[3]])
cp_prime_neg2_cor_ms = np.array([cp_prime_mblock_cor_ms[3], cp_prime_hblock_cor_ms[3]])
cp_prime_neg2_cor_ph = np.array([cp_prime_m_cor_ph[3], cp_prime_h_cor_ph[3]])

cp_prime_neg1_5_gl = np.array([cp_prime_mblock_gl[4], cp_prime_hblock_gl[4]])
cp_prime_neg1_5_ms = np.array([cp_prime_mblock_ms[4], cp_prime_hblock_ms[4]])
cp_prime_neg1_5_ph = np.array([cp_prime_m_ph[4], cp_prime_h_ph[4]])
cp_prime_neg1_5_cor_gl = np.array([cp_prime_mblock_cor_gl[4], cp_prime_hblock_cor_gl[4]])
cp_prime_neg1_5_cor_ms = np.array([cp_prime_mblock_cor_ms[4], cp_prime_hblock_cor_ms[4]])
cp_prime_neg1_5_cor_ph = np.array([cp_prime_m_cor_ph[4], cp_prime_h_cor_ph[4]])

cp_prime_neg1_gl = np.array([cp_prime_mblock_gl[5], cp_prime_hblock_gl[5]])
cp_prime_neg1_ms = np.array([cp_prime_mblock_ms[5], cp_prime_hblock_ms[5]])
cp_prime_neg1_ph = np.array([cp_prime_m_ph[5], cp_prime_h_ph[5]])
cp_prime_neg1_cor_gl = np.array([cp_prime_mblock_cor_gl[5], cp_prime_hblock_cor_gl[5]])
cp_prime_neg1_cor_ms = np.array([cp_prime_mblock_cor_ms[5], cp_prime_hblock_cor_ms[5]])
cp_prime_neg1_cor_ph = np.array([cp_prime_m_cor_ph[5], cp_prime_h_cor_ph[5]])

cp_prime_neg0_5_gl = np.array([cp_prime_mblock_gl[6], cp_prime_hblock_gl[6]])
cp_prime_neg0_5_ms = np.array([cp_prime_mblock_ms[6], cp_prime_hblock_ms[6]])
cp_prime_neg0_5_ph = np.array([cp_prime_m_ph[6], cp_prime_h_ph[6]])
cp_prime_neg0_5_cor_gl = np.array([cp_prime_mblock_cor_gl[6], cp_prime_hblock_cor_gl[6]])
cp_prime_neg0_5_cor_ms = np.array([cp_prime_mblock_cor_ms[6], cp_prime_hblock_cor_ms[6]])
cp_prime_neg0_5_cor_ph = np.array([cp_prime_m_cor_ph[6], cp_prime_h_cor_ph[6]])

cp_prime_0_gl = np.array([cp_prime_mblock_gl[7], cp_prime_hblock_gl[7]])
cp_prime_0_ms = np.array([cp_prime_mblock_ms[7], cp_prime_hblock_ms[7]])
cp_prime_0_ph = np.array([cp_prime_m_ph[7], cp_prime_h_ph[7]])
cp_prime_0_cor_gl = np.array([cp_prime_mblock_cor_gl[7], cp_prime_hblock_cor_gl[7]])
cp_prime_0_cor_ms = np.array([cp_prime_mblock_cor_ms[7], cp_prime_hblock_cor_ms[7]])
cp_prime_0_cor_ph = np.array([cp_prime_m_cor_ph[7], cp_prime_h_cor_ph[7]])

cp_prime_0_5_gl = np.array([cp_prime_mblock_gl[8], cp_prime_hblock_gl[8]])
cp_prime_0_5_ms = np.array([cp_prime_mblock_ms[8], cp_prime_hblock_ms[8]])
cp_prime_0_5_ph = np.array([cp_prime_m_ph[8], cp_prime_h_ph[8]])
cp_prime_0_5_cor_gl = np.array([cp_prime_mblock_cor_gl[8], cp_prime_hblock_cor_gl[8]])
cp_prime_0_5_cor_ms = np.array([cp_prime_mblock_cor_ms[8], cp_prime_hblock_cor_ms[8]])
cp_prime_0_5_cor_ph = np.array([cp_prime_m_cor_ph[8], cp_prime_h_cor_ph[8]])

cp_prime_1_gl = np.array([cp_prime_mblock_gl[9], cp_prime_hblock_gl[9]])
cp_prime_1_ms = np.array([cp_prime_mblock_ms[9], cp_prime_hblock_ms[9]])
cp_prime_1_ph = np.array([cp_prime_m_ph[9], cp_prime_h_ph[9]])
cp_prime_1_cor_gl = np.array([cp_prime_mblock_cor_gl[9], cp_prime_hblock_cor_gl[9]])
cp_prime_1_cor_ms = np.array([cp_prime_mblock_cor_ms[9], cp_prime_hblock_cor_ms[9]])
cp_prime_1_cor_ph = np.array([cp_prime_m_cor_ph[9], cp_prime_h_cor_ph[9]])

cp_prime_1_5_gl = np.array([cp_prime_mblock_gl[10], cp_prime_hblock_gl[10]])
cp_prime_1_5_ms = np.array([cp_prime_mblock_ms[10], cp_prime_hblock_ms[10]])
cp_prime_1_5_ph = np.array([cp_prime_m_ph[10], cp_prime_h_ph[10]])
cp_prime_1_5_cor_gl = np.array([cp_prime_mblock_cor_gl[10], cp_prime_hblock_cor_gl[10]])
cp_prime_1_5_cor_ms = np.array([cp_prime_mblock_cor_ms[10], cp_prime_hblock_cor_ms[10]])
cp_prime_1_5_cor_ph = np.array([cp_prime_m_cor_ph[10], cp_prime_h_cor_ph[10]])

cp_prime_2_gl = np.array([cp_prime_mblock_gl[11], cp_prime_hblock_gl[11]])
cp_prime_2_ms = np.array([cp_prime_mblock_ms[11], cp_prime_hblock_ms[11]])
cp_prime_2_ph = np.array([cp_prime_m_ph[11], cp_prime_h_ph[11]])
cp_prime_2_cor_gl = np.array([cp_prime_mblock_cor_gl[11], cp_prime_hblock_cor_gl[11]])
cp_prime_2_cor_ms = np.array([cp_prime_mblock_cor_ms[11], cp_prime_hblock_cor_ms[11]])
cp_prime_2_cor_ph = np.array([cp_prime_m_cor_ph[11], cp_prime_h_cor_ph[11]])

cp_prime_2_5_gl = np.array([cp_prime_mblock_gl[12], cp_prime_hblock_gl[12]])
cp_prime_2_5_ms = np.array([cp_prime_mblock_ms[12], cp_prime_hblock_ms[12]])
cp_prime_2_5_ph = np.array([cp_prime_m_ph[12], cp_prime_h_ph[12]])
cp_prime_2_5_cor_gl = np.array([cp_prime_mblock_cor_gl[12], cp_prime_hblock_cor_gl[12]])
cp_prime_2_5_cor_ms = np.array([cp_prime_mblock_cor_ms[12], cp_prime_hblock_cor_ms[12]])
cp_prime_2_5_cor_ph = np.array([cp_prime_m_cor_ph[12], cp_prime_h_cor_ph[12]])

cp_prime_3_gl = np.array([cp_prime_mblock_gl[13], cp_prime_hblock_gl[13]])
cp_prime_3_ms = np.array([cp_prime_mblock_ms[13], cp_prime_hblock_ms[13]])
cp_prime_3_ph = np.array([cp_prime_m_ph[13], cp_prime_h_ph[13]])
cp_prime_3_cor_gl = np.array([cp_prime_mblock_cor_gl[13], cp_prime_hblock_cor_gl[13]])
cp_prime_3_cor_ms = np.array([cp_prime_mblock_cor_ms[13], cp_prime_hblock_cor_ms[13]])
cp_prime_3_cor_ph = np.array([cp_prime_m_cor_ph[13], cp_prime_h_cor_ph[13]])

cp_prime_3_5_gl = np.array([cp_prime_mblock_gl[14], cp_prime_hblock_gl[14]])
cp_prime_3_5_ms = np.array([cp_prime_mblock_ms[14], cp_prime_hblock_ms[14]])
cp_prime_3_5_ph = np.array([cp_prime_m_ph[14], cp_prime_h_ph[14]])
cp_prime_3_5_cor_gl = np.array([cp_prime_mblock_cor_gl[14], cp_prime_hblock_cor_gl[14]])
cp_prime_3_5_cor_ms = np.array([cp_prime_mblock_cor_ms[14], cp_prime_hblock_cor_ms[14]])
cp_prime_3_5_cor_ph = np.array([cp_prime_m_cor_ph[14], cp_prime_h_cor_ph[14]])

cp_prime_4_gl = np.array([cp_prime_mblock_gl[15], cp_prime_hblock_gl[15]])
cp_prime_4_ms = np.array([cp_prime_mblock_ms[15], cp_prime_hblock_ms[15]])
cp_prime_4_ph = np.array([cp_prime_m_ph[15], cp_prime_h_ph[15]])
cp_prime_4_cor_gl = np.array([cp_prime_mblock_cor_gl[15], cp_prime_hblock_cor_gl[15]])
cp_prime_4_cor_ms = np.array([cp_prime_mblock_cor_ms[15], cp_prime_hblock_cor_ms[15]])
cp_prime_4_cor_ph = np.array([cp_prime_m_cor_ph[15], cp_prime_h_cor_ph[15]])

#Ct
ct_prime_neg3_5_gl = np.array([ct_prime_mblock_gl[0], ct_prime_hblock_gl[0]])
ct_prime_neg3_5_ms = np.array([ct_prime_mblock_ms[0], ct_prime_hblock_ms[0]])
ct_prime_neg3_5_ph = np.array([ct_prime_m_ph[0], ct_prime_h_ph[0]])
ct_prime_neg3_5_cor_gl = np.array([ct_prime_mblock_cor_gl[0], ct_prime_hblock_cor_gl[0]])
ct_prime_neg3_5_cor_ms = np.array([ct_prime_mblock_cor_ms[0], ct_prime_hblock_cor_ms[0]])
ct_prime_neg3_5_cor_ph = np.array([ct_prime_m_cor_ph[0], ct_prime_h_cor_ph[0]])

ct_prime_neg3_gl = np.array([ct_prime_mblock_gl[1], ct_prime_hblock_gl[1]])
ct_prime_neg3_ms = np.array([ct_prime_mblock_ms[1], ct_prime_hblock_ms[1]])
ct_prime_neg3_ph = np.array([ct_prime_m_ph[1], ct_prime_h_ph[1]])
ct_prime_neg3_cor_gl = np.array([ct_prime_mblock_cor_gl[1], ct_prime_hblock_cor_gl[1]])
ct_prime_neg3_cor_ms = np.array([ct_prime_mblock_cor_ms[1], ct_prime_hblock_cor_ms[1]])
ct_prime_neg3_cor_ph = np.array([ct_prime_m_cor_ph[1], ct_prime_h_cor_ph[1]])

ct_prime_neg2_5_gl = np.array([ct_prime_mblock_gl[2], ct_prime_hblock_gl[2]])
ct_prime_neg2_5_ms = np.array([ct_prime_mblock_ms[2], ct_prime_hblock_ms[2]])
ct_prime_neg2_5_ph = np.array([ct_prime_m_ph[2], ct_prime_h_ph[2]])
ct_prime_neg2_5_cor_gl = np.array([ct_prime_mblock_cor_gl[2], ct_prime_hblock_cor_gl[2]])
ct_prime_neg2_5_cor_ms = np.array([ct_prime_mblock_cor_ms[2], ct_prime_hblock_cor_ms[2]])
ct_prime_neg2_5_cor_ph = np.array([ct_prime_m_cor_ph[2], ct_prime_h_cor_ph[2]])

ct_prime_neg2_gl = np.array([ct_prime_mblock_gl[3], ct_prime_hblock_gl[3]])
ct_prime_neg2_ms = np.array([ct_prime_mblock_ms[3], ct_prime_hblock_ms[3]])
ct_prime_neg2_ph = np.array([ct_prime_m_ph[3], ct_prime_h_ph[3]])
ct_prime_neg2_cor_gl = np.array([ct_prime_mblock_cor_gl[3], ct_prime_hblock_cor_gl[3]])
ct_prime_neg2_cor_ms = np.array([ct_prime_mblock_cor_ms[3], ct_prime_hblock_cor_ms[3]])
ct_prime_neg2_cor_ph = np.array([ct_prime_m_cor_ph[3], ct_prime_h_cor_ph[3]])

ct_prime_neg1_5_gl = np.array([ct_prime_mblock_gl[4], ct_prime_hblock_gl[4]])
ct_prime_neg1_5_ms = np.array([ct_prime_mblock_ms[4], ct_prime_hblock_ms[4]])
ct_prime_neg1_5_ph = np.array([ct_prime_m_ph[4], ct_prime_h_ph[4]])
ct_prime_neg1_5_cor_gl = np.array([ct_prime_mblock_cor_gl[4], ct_prime_hblock_cor_gl[4]])
ct_prime_neg1_5_cor_ms = np.array([ct_prime_mblock_cor_ms[4], ct_prime_hblock_cor_ms[4]])
ct_prime_neg1_5_cor_ph = np.array([ct_prime_m_cor_ph[4], ct_prime_h_cor_ph[4]])

ct_prime_neg1_gl = np.array([ct_prime_mblock_gl[5], ct_prime_hblock_gl[5]])
ct_prime_neg1_ms = np.array([ct_prime_mblock_ms[5], ct_prime_hblock_ms[5]])
ct_prime_neg1_ph = np.array([ct_prime_m_ph[5], ct_prime_h_ph[5]])
ct_prime_neg1_cor_gl = np.array([ct_prime_mblock_cor_gl[5], ct_prime_hblock_cor_gl[5]])
ct_prime_neg1_cor_ms = np.array([ct_prime_mblock_cor_ms[5], ct_prime_hblock_cor_ms[5]])
ct_prime_neg1_cor_ph = np.array([ct_prime_m_cor_ph[5], ct_prime_h_cor_ph[5]])

ct_prime_neg0_5_gl = np.array([ct_prime_mblock_gl[6], ct_prime_hblock_gl[6]])
ct_prime_neg0_5_ms = np.array([ct_prime_mblock_ms[6], ct_prime_hblock_ms[6]])
ct_prime_neg0_5_ph = np.array([ct_prime_m_ph[6], ct_prime_h_ph[6]])
ct_prime_neg0_5_cor_gl = np.array([ct_prime_mblock_cor_gl[6], ct_prime_hblock_cor_gl[6]])
ct_prime_neg0_5_cor_ms = np.array([ct_prime_mblock_cor_ms[6], ct_prime_hblock_cor_ms[6]])
ct_prime_neg0_5_cor_ph = np.array([ct_prime_m_cor_ph[6], ct_prime_h_cor_ph[6]])

ct_prime_0_gl = np.array([ct_prime_mblock_gl[7], ct_prime_hblock_gl[7]])
ct_prime_0_ms = np.array([ct_prime_mblock_ms[7], ct_prime_hblock_ms[7]])
ct_prime_0_ph = np.array([ct_prime_m_ph[7], ct_prime_h_ph[7]])
ct_prime_0_cor_gl = np.array([ct_prime_mblock_cor_gl[7], ct_prime_hblock_cor_gl[7]])
ct_prime_0_cor_ms = np.array([ct_prime_mblock_cor_ms[7], ct_prime_hblock_cor_ms[7]])
ct_prime_0_cor_ph = np.array([ct_prime_m_cor_ph[7], ct_prime_h_cor_ph[7]])

ct_prime_0_5_gl = np.array([ct_prime_mblock_gl[8], ct_prime_hblock_gl[8]])
ct_prime_0_5_ms = np.array([ct_prime_mblock_ms[8], ct_prime_hblock_ms[8]])
ct_prime_0_5_ph = np.array([ct_prime_m_ph[8], ct_prime_h_ph[8]])
ct_prime_0_5_cor_gl = np.array([ct_prime_mblock_cor_gl[8], ct_prime_hblock_cor_gl[8]])
ct_prime_0_5_cor_ms = np.array([ct_prime_mblock_cor_ms[8], ct_prime_hblock_cor_ms[8]])
ct_prime_0_5_cor_ph = np.array([ct_prime_m_cor_ph[8], ct_prime_h_cor_ph[8]])

ct_prime_1_gl = np.array([ct_prime_mblock_gl[9], ct_prime_hblock_gl[9]])
ct_prime_1_ms = np.array([ct_prime_mblock_ms[9], ct_prime_hblock_ms[9]])
ct_prime_1_ph = np.array([ct_prime_m_ph[9], ct_prime_h_ph[9]])
ct_prime_1_cor_gl = np.array([ct_prime_mblock_cor_gl[9], ct_prime_hblock_cor_gl[9]])
ct_prime_1_cor_ms = np.array([ct_prime_mblock_cor_ms[9], ct_prime_hblock_cor_ms[9]])
ct_prime_1_cor_ph = np.array([ct_prime_m_cor_ph[9], ct_prime_h_cor_ph[9]])

ct_prime_1_5_gl = np.array([ct_prime_mblock_gl[10], ct_prime_hblock_gl[10]])
ct_prime_1_5_ms = np.array([ct_prime_mblock_ms[10], ct_prime_hblock_ms[10]])
ct_prime_1_5_ph = np.array([ct_prime_m_ph[10], ct_prime_h_ph[10]])
ct_prime_1_5_cor_gl = np.array([ct_prime_mblock_cor_gl[10], ct_prime_hblock_cor_gl[10]])
ct_prime_1_5_cor_ms = np.array([ct_prime_mblock_cor_ms[10], ct_prime_hblock_cor_ms[10]])
ct_prime_1_5_cor_ph = np.array([ct_prime_m_cor_ph[10], ct_prime_h_cor_ph[10]])

ct_prime_2_gl = np.array([ct_prime_mblock_gl[11], ct_prime_hblock_gl[11]])
ct_prime_2_ms = np.array([ct_prime_mblock_ms[11], ct_prime_hblock_ms[11]])
ct_prime_2_ph = np.array([ct_prime_m_ph[11], ct_prime_h_ph[11]])
ct_prime_2_cor_gl = np.array([ct_prime_mblock_cor_gl[11], ct_prime_hblock_cor_gl[11]])
ct_prime_2_cor_ms = np.array([ct_prime_mblock_cor_ms[11], ct_prime_hblock_cor_ms[11]])
ct_prime_2_cor_ph = np.array([ct_prime_m_cor_ph[11], ct_prime_h_cor_ph[11]])

ct_prime_2_5_gl = np.array([ct_prime_mblock_gl[12], ct_prime_hblock_gl[12]])
ct_prime_2_5_ms = np.array([ct_prime_mblock_ms[12], ct_prime_hblock_ms[12]])
ct_prime_2_5_ph = np.array([ct_prime_m_ph[12], ct_prime_h_ph[12]])
ct_prime_2_5_cor_gl = np.array([ct_prime_mblock_cor_gl[12], ct_prime_hblock_cor_gl[12]])
ct_prime_2_5_cor_ms = np.array([ct_prime_mblock_cor_ms[12], ct_prime_hblock_cor_ms[12]])
ct_prime_2_5_cor_ph = np.array([ct_prime_m_cor_ph[12], ct_prime_h_cor_ph[12]])

ct_prime_3_gl = np.array([ct_prime_mblock_gl[13], ct_prime_hblock_gl[13]])
ct_prime_3_ms = np.array([ct_prime_mblock_ms[13], ct_prime_hblock_ms[13]])
ct_prime_3_ph = np.array([ct_prime_m_ph[13], ct_prime_h_ph[13]])
ct_prime_3_cor_gl = np.array([ct_prime_mblock_cor_gl[13], ct_prime_hblock_cor_gl[13]])
ct_prime_3_cor_ms = np.array([ct_prime_mblock_cor_ms[13], ct_prime_hblock_cor_ms[13]])
ct_prime_3_cor_ph = np.array([ct_prime_m_cor_ph[13], ct_prime_h_cor_ph[13]])

ct_prime_3_5_gl = np.array([ct_prime_mblock_gl[14], ct_prime_hblock_gl[14]])
ct_prime_3_5_ms = np.array([ct_prime_mblock_ms[14], ct_prime_hblock_ms[14]])
ct_prime_3_5_ph = np.array([ct_prime_m_ph[14], ct_prime_h_ph[14]])
ct_prime_3_5_cor_gl = np.array([ct_prime_mblock_cor_gl[14], ct_prime_hblock_cor_gl[14]])
ct_prime_3_5_cor_ms = np.array([ct_prime_mblock_cor_ms[14], ct_prime_hblock_cor_ms[14]])
ct_prime_3_5_cor_ph = np.array([ct_prime_m_cor_ph[14], ct_prime_h_cor_ph[14]])

ct_prime_4_gl = np.array([ct_prime_mblock_gl[15], ct_prime_hblock_gl[15]])
ct_prime_4_ms = np.array([ct_prime_mblock_ms[15], ct_prime_hblock_ms[15]])
ct_prime_4_ph = np.array([ct_prime_m_ph[15], ct_prime_h_ph[15]])
ct_prime_4_cor_gl = np.array([ct_prime_mblock_cor_gl[15], ct_prime_hblock_cor_gl[15]])
ct_prime_4_cor_ms = np.array([ct_prime_mblock_cor_ms[15], ct_prime_hblock_cor_ms[15]])
ct_prime_4_cor_ph = np.array([ct_prime_m_cor_ph[15], ct_prime_h_cor_ph[15]])

b = [10, 35]

#Plots
#Cp Plots

plt.figure(figsize=(9, 6))
plt.scatter(b, cp_prime_neg3_5_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_neg3_5_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_neg3_5_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for -3.5 Ct Prime')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_neg3_5_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, cp_prime_neg3_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_neg3_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_neg3_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for -3 Ct Prime')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_neg3_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, cp_prime_neg2_5_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_neg2_5_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_neg2_5_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for -2.5 Ct Prime')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_neg2_5_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, cp_prime_neg2_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_neg2_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_neg2_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for -2 Ct Prime')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_neg2_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, cp_prime_neg1_5_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_neg1_5_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_neg1_5_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for -1.5 Ct Prime')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_neg1_5_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, cp_prime_neg1_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_neg1_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_neg1_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for -1 Ct Prime')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_neg1_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, cp_prime_neg0_5_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_neg0_5_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_neg0_5_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for -0.5 Ct Prime')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_neg0_5_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, cp_prime_0_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_0_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_0_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for 0 Ct Prime')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_0_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, cp_prime_0_5_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_0_5_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_0_5_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for 0.5 Ct Prime')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_0_5_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, cp_prime_1_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_1_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_1_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for 1 Ct Prime')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_1_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, cp_prime_1_5_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_1_5_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_1_5_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for 1.5 Ct Prime')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_1_5_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, cp_prime_2_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_2_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_2_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for 2 Ct Prime')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_2_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, cp_prime_2_5_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_2_5_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_2_5_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for 2.5 Ct Prime')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_2_5_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, cp_prime_3_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_3_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_3_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for 3 Ct Prime')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_3_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, cp_prime_3_5_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_3_5_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_3_5_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for 3.5 Ct Prime')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_3_5_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, cp_prime_4_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_4_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_4_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for 4 Ct Prime')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_4_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, cp_prime_neg3_5_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_neg3_5_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_neg3_5_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for -3.5 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_neg3_5_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, cp_prime_neg3_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_neg3_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_neg3_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for -3 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_neg3_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, cp_prime_neg2_5_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_neg2_5_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_neg2_5_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for -2.5 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_neg2_5_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, cp_prime_neg2_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_neg2_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_neg2_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for -2 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_neg2_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, cp_prime_neg1_5_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_neg1_5_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_neg1_5_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for -1.5 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_neg1_5_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, cp_prime_neg1_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_neg1_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_neg1_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for -1 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_neg1_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, cp_prime_neg0_5_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_neg0_5_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_neg0_5_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for -0.5 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_neg0_5_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, cp_prime_0_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_0_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_0_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for 0 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_0_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, cp_prime_0_5_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_0_5_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_0_5_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for 0.5 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_0_5_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, cp_prime_1_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_1_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_1_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for 1 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_1_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, cp_prime_1_5_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_1_5_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_1_5_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for 1.5 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_1_5_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, cp_prime_2_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_2_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_2_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for 2 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_2_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, cp_prime_2_5_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_2_5_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_2_5_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for 2.5 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_2_5_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, cp_prime_3_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_3_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_3_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for 3 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_3_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, cp_prime_3_5_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_3_5_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_3_5_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for 3.5 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_3_5_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, cp_prime_4_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, cp_prime_4_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, cp_prime_4_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Cp Prime Comparison for 4 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Cp Prime')
plt.legend()
plt.savefig('./cp_prime_4_cor_compare')


#Ct
plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_neg3_5_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_neg3_5_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_neg3_5_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for -3.5 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_neg3_5_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_neg3_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_neg3_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_neg3_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for -3 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_neg3_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_neg2_5_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_neg2_5_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_neg2_5_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for -2.5 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_neg2_5_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_neg2_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_neg2_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_neg2_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for -2 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_neg2_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_neg2_5_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_neg2_5_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_neg2_5_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for -2.5 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_neg2_5_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_neg1_5_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_neg1_5_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_neg1_5_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for -1.5 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_neg1_5_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_neg1_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_neg1_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_neg1_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for -1 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_neg1_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_neg0_5_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_neg0_5_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_neg0_5_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for -0.5 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_neg0_5_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_0_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_0_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_0_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 0 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_0_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_0_5_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_0_5_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_0_5_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 0.5 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_0_5_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_0_5_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_0_5_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_0_5_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 0.5 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_0_5_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_1_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_1_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_1_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 1 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_1_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_1_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_1_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_1_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 1 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_1_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_1_5_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_1_5_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_1_5_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 1.5 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_1_5_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_2_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_2_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_2_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 2 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_2_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_2_5_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_2_5_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_2_5_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 2.5 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_2_5_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_3_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_3_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_3_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 3 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_3_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_3_5_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_3_5_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_3_5_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 3.5 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_3_5_compare')

plt.figure(figsize=(9, 6))
plt.scatter(b, ct_prime_4_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_4_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_4_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 4 Ct Prime (Local)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_4_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, ct_prime_neg3_5_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_neg3_5_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_neg3_5_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for -3.5 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_neg3_5_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, ct_prime_neg3_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_neg3_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_neg3_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for -3 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_neg3_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, ct_prime_neg2_5_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_neg2_5_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_neg2_5_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for -2.5 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_neg2_5_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, ct_prime_neg2_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_neg2_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_neg2_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for -2 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_neg2_cor_compare')  

plt.figure(figsize=(9,6))
plt.scatter(b, ct_prime_neg1_5_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_neg1_5_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_neg1_5_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for -1.5 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_neg1_5_cor_compare')    

plt.figure(figsize=(9,6))
plt.scatter(b, ct_prime_neg1_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_neg1_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_neg1_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for -1 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_neg1_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, ct_prime_neg0_5_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_neg0_5_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_neg0_5_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for -0.5 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_neg0_5_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, ct_prime_0_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_0_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_0_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 0 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_0_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, ct_prime_0_5_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_0_5_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_0_5_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 0.5 Ct Prime (Corrected)')  
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_0_5_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, ct_prime_1_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_1_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_1_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 1 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_1_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, ct_prime_1_5_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_1_5_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_1_5_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 1.5 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_1_5_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, ct_prime_2_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_2_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_2_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 2 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_2_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, ct_prime_2_5_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_2_5_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_2_5_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 2.5 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_2_5_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, ct_prime_3_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_3_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_3_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 3 Ct Prime (Corrected)')
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_3_cor_compare') 

plt.figure(figsize=(9,6))
plt.scatter(b, ct_prime_3_5_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_3_5_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_3_5_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 3.5 Ct Prime (Corrected)')   
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_3_5_cor_compare')

plt.figure(figsize=(9,6))
plt.scatter(b, ct_prime_4_cor_gl, color='blue', label = 'Glauert')
plt.scatter(b, ct_prime_4_cor_ms, color='orange', label = 'Mikkelsen/Sorensen')
plt.scatter(b, ct_prime_4_cor_ph, color='green', label = 'Pope/Harper')
plt.title('Ct Prime Comparison for 4 Ct Prime (Corrected)') 
plt.xlabel('Blockage Level (%)')
plt.ylabel('Ct Prime')
plt.legend()
plt.savefig('./ct_prime_4_cor_compare')