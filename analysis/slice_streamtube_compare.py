import analysis_utils as au
from pathlib import Path
import os
import math
import padeopsIO as pio
# from pathlib import Path
import matplotlib.pyplot as plt
from scipy.signal import find_peaks
import numpy as np
from padeopsIO import turbine

#Import Velocities
b3h = np.load("b3h.npy")
b3m = np.load("b3m.npy")
b4h = np.load("b4h.npy")
b4m = np.load("b4m.npy")
b5h = np.load("b5h.npy")
b5m = np.load("b5m.npy")
b6h = np.load("b6h.npy")
b6m = np.load("b6m.npy")
b7h = np.load("b7h.npy")
b7m = np.load("b7m.npy")
b8h = np.load("b8h.npy")
b8m = np.load("b8m.npy")
b9h = np.load("b9h.npy")
b9m = np.load("b9m.npy")
b10h = np.load("b10h.npy")
b10m = np.load("b10m.npy")
b11h = np.load("b11h.npy")
b11m = np.load("b11m.npy")
b12h = np.load("b12h.npy")
b12m = np.load("b12m.npy")
b13h = np.load("b13h.npy")
b13m = np.load("b13m.npy")
b14h = np.load("b14h.npy")
b14m = np.load("b14m.npy")
b15h = np.load("b15h.npy")
b15m = np.load("b15m.npy")
b16h = np.load("b16h.npy")
b16m = np.load("b16m.npy")
b17h = np.load("b17h.npy")
b17m = np.load("b17m.npy")
c3m = np.load("c3m.npy")
c3h = np.load("c3h.npy")
c4m = np.load("c4m.npy")
c4h = np.load("c4h.npy")
c5m = np.load("c5m.npy")
c5h = np.load("c5h.npy")
c6m = np.load("c6m.npy")
c6h = np.load("c6h.npy")
c7m = np.load("c7m.npy")
c7h = np.load("c7h.npy")
c8m = np.load("c8m.npy")
c8h = np.load("c8h.npy")
c9m = np.load("c9m.npy")
c9h = np.load("c9h.npy")
c10m = np.load("c10m.npy")
c10h = np.load("c10h.npy")
c11m = np.load("c11m.npy")
c11h = np.load("c11h.npy")
c12m = np.load("c12m.npy")
c12h = np.load("c12h.npy")
c13m = np.load("c13m.npy")
c13h = np.load("c13h.npy")
c14m = np.load("c14m.npy")
c14h = np.load("c14h.npy")
c15m = np.load("c15m.npy")
c15h = np.load("c15h.npy")
c16m = np.load("c16m.npy")
c16h = np.load("c16h.npy")
c17m = np.load("c17m.npy")
c17h = np.load("c17h.npy")
uavg_3hb = np.load("uavg_3hb.npy")
uavg_3mb = np.load("uavg_3mb.npy")
uavg_4hb = np.load("uavg_4hb.npy")
uavg_4mb = np.load("uavg_4mb.npy")
uavg_5hb = np.load("uavg_5hb.npy")
uavg_5mb = np.load("uavg_5mb.npy")
uavg_6hb = np.load("uavg_6hb.npy")
uavg_6mb = np.load("uavg_6mb.npy")
uavg_7hb = np.load("uavg_7hb.npy")
uavg_7mb = np.load("uavg_7mb.npy")
uavg_8hb = np.load("uavg_8hb.npy")
uavg_8mb = np.load("uavg_8mb.npy")
uavg_9hb = np.load("uavg_9hb.npy")
uavg_9mb = np.load("uavg_9mb.npy")
uavg_10hb = np.load("uavg_10hb.npy")
uavg_10mb = np.load("uavg_10mb.npy")
uavg_11hb = np.load("uavg_11hb.npy")
uavg_11mb = np.load("uavg_11mb.npy")
uavg_12hb = np.load("uavg_12hb.npy")
uavg_12mb = np.load("uavg_12mb.npy")
uavg_13hb = np.load("uavg_13hb.npy")
uavg_13mb = np.load("uavg_13mb.npy")
uavg_14hb = np.load("uavg_14hb.npy")
uavg_14mb = np.load("uavg_14mb.npy")
uavg_15hb = np.load("uavg_15hb.npy")
uavg_15mb = np.load("uavg_15mb.npy")
uavg_16hb = np.load("uavg_16hb.npy")
uavg_16mb = np.load("uavg_16mb.npy")
uavg_17hb = np.load("uavg_17hb.npy")
uavg_17mb = np.load("uavg_17mb.npy")
uavg_3hw = np.load("uavg_3hw.npy")
uavg_3mw = np.load("uavg_3mw.npy")
uavg_4hw = np.load("uavg_4hw.npy")
uavg_4mw = np.load("uavg_4mw.npy")
uavg_5hw = np.load("uavg_5hw.npy")
uavg_5mw = np.load("uavg_5mw.npy")
uavg_6hw = np.load("uavg_6hw.npy")
uavg_6mw = np.load("uavg_6mw.npy")
uavg_7hw = np.load("uavg_7hw.npy")
uavg_7mw = np.load("uavg_7mw.npy")
uavg_8hw = np.load("uavg_8hw.npy")
uavg_8mw = np.load("uavg_8mw.npy")
uavg_9hw = np.load("uavg_9hw.npy")
uavg_9mw = np.load("uavg_9mw.npy")
uavg_10hw = np.load("uavg_10hw.npy")
uavg_10mw = np.load("uavg_10mw.npy")
uavg_11hw = np.load("uavg_11hw.npy")
uavg_11mw = np.load("uavg_11mw.npy")
uavg_12hw = np.load("uavg_12hw.npy")
uavg_12mw = np.load("uavg_12mw.npy")
uavg_13hw = np.load("uavg_13hw.npy")
uavg_13mw = np.load("uavg_13mw.npy")
uavg_14hw = np.load("uavg_14hw.npy")
uavg_14mw = np.load("uavg_14mw.npy")
uavg_15hw = np.load("uavg_15hw.npy")
uavg_15mw = np.load("uavg_15mw.npy")
uavg_16hw = np.load("uavg_16hw.npy")
uavg_16mw = np.load("uavg_16mw.npy")
uavg_17hw = np.load("uavg_17hw.npy")
uavg_17mw = np.load("uavg_17mw.npy")
x = np.load("xvals.npy")

#Plots
plt.figure(figsize=(9,6))
plt.plot(x, b3h, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_3hb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c3h, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_3hw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = -3, Blockage = 35%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_3h')

plt.figure(figsize=(9,6))
plt.plot(x, b3m, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_3mb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c3m, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_3mw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = -3, Blockage = 10%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_3m')

plt.figure(figsize=(9,6))
plt.plot(x, b4h, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_4hb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c4h, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_4hw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = -2.5, Blockage = 35%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_4h')

plt.figure(figsize=(9,6))
plt.plot(x, b4m, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_4mb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c4m, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_4mw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = -2.5, Blockage = 10%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_4m')

plt.figure(figsize=(9,6))
plt.plot(x, b5h, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_5hb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c5h, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_5hw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = -2, Blockage = 35%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_5h')

plt.figure(figsize=(9,6))
plt.plot(x, b5m, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_5mb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c5m, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_5mw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = -2, Blockage = 10%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_5m')

plt.figure(figsize=(9,6))
plt.plot(x, b6h, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_6hb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c6h, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_6hw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = -1.5, Blockage = 35%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_6h')

plt.figure(figsize=(9,6))
plt.plot(x, b6m, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_6mb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c6m, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_6mw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = -1.5, Blockage = 10%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_6m')

plt.figure(figsize=(9,6))
plt.plot(x, b7h, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_7hb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c7h, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_7hw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = -1, Blockage = 35%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_7h')

plt.figure(figsize=(9,6))
plt.plot(x, b7m, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_7mb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c7m, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_7mw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = -1, Blockage = 10%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_7m')

plt.figure(figsize=(9,6))
plt.plot(x, b8h, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_8hb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c8h, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_8hw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = -0.5, Blockage = 35%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_8h')

plt.figure(figsize=(9,6))
plt.plot(x, b8m, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_8mb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c8m, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_8mw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = -0.5, Blockage = 10%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_8m')

plt.figure(figsize=(9,6))
plt.plot(x, b9h, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_9hb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c9h, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_9hw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = 0, Blockage = 35%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_9h')

plt.figure(figsize=(9,6))
plt.plot(x, b9m, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_9mb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c9m, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_9mw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = 0, Blockage = 10%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_9m')

plt.figure(figsize=(9,6))
plt.plot(x, b10h, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_10hb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c10h, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_10hw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = 0.5, Blockage = 35%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_10h')

plt.figure(figsize=(9,6))
plt.plot(x, b10m, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_10mb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c10m, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_10mw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = 0.5, Blockage = 10%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_10m')

plt.figure(figsize=(9,6))
plt.plot(x, b11h, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_11hb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c11h, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_11hw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = 1, Blockage = 35%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_11h')

plt.figure(figsize=(9,6))
plt.plot(x, b11m, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_11mb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c11m, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_11mw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = 1, Blockage = 10%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_11m')

plt.figure(figsize=(9,6))
plt.plot(x, b12h, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_12hb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c12h, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_12hw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = 1.5, Blockage = 35%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_12h')

plt.figure(figsize=(9,6))
plt.plot(x, b12m, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_12mb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c12m, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_12mw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = 1.5, Blockage = 10%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_12m')

plt.figure(figsize=(9,6))
plt.plot(x, b13h, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_13hb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c13h, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_13hw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = 2, Blockage = 35%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_13h')

plt.figure(figsize=(9,6))
plt.plot(x, b13m, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_13mb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c13m, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_13mw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = 2, Blockage = 10%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_13m')

plt.figure(figsize=(9,6))
plt.plot(x, b14h, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_14hb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c14h, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_14hw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = 2.5, Blockage = 35%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_14h')

plt.figure(figsize=(9,6))
plt.plot(x, b14m, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_14mb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c14m, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_14mw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = 2.5, Blockage = 10%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_14m')

plt.figure(figsize=(9,6))
plt.plot(x, b15h, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_15hb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c15h, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_15hw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = 3, Blockage = 35%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_15h')

plt.figure(figsize=(9,6))
plt.plot(x, b15m, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_15mb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c15m, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_15mw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = 3, Blockage = 10%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_15m')

plt.figure(figsize=(9,6))
plt.plot(x, b16h, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_16hb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c16h, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_16hw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = 3.5, Blockage = 35%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_16h')

plt.figure(figsize=(9,6))
plt.plot(x, b16m, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_16mb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c16m, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_16mw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = 3.5, Blockage = 10%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_16m')

plt.figure(figsize=(9,6))
plt.plot(x, b17h, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_17hb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c17h, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_17hw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = 4, Blockage = 35%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_17h')

plt.figure(figsize=(9,6))
plt.plot(x, b17m, linestyle = '--', color = 'red', label = 'Bypass Velocity')
plt.plot(x, uavg_17mb, color = 'red', label = 'Bypass Averaged Velocity')
plt.plot(x, c17m, linestyle = '--', color = 'blue', label = 'Wake Velocity')
plt.plot(x, uavg_17mw, color = 'blue', label = 'Wake Averaged Velocity')
plt.title('Slice and Streamtube Comparison at Ct Prime = 4, Blockage = 10%')
plt.xlabel('X/D')
plt.ylabel('ubar')
plt.legend()
plt.savefig('./comp_17m')