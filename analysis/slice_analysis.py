import analysis_utils as au
from pathlib import Path
import os
import math
import padeopsIO as pio
# from pathlib import Path
import matplotlib.pyplot as plt
from scipy.signal import find_peaks
import numpy as np
from padeopsIO import turbine

data_path = Path(au.DATA_PATH)

#sim1_mblock = pio.BudgetIO("Data/B_0004_Files/Sim_0000", padeops = True, runid = 0, normalize_origin = "turbine")
#sim2_mblock = pio.BudgetIO("Data/B_0004_Files/Sim_0001", padeops = True, runid = 0, normalize_origin = "turbine")
sim3_mblock = pio.BudgetIO("Data/B_0004_Files/Sim_0002", padeops = True, runid = 0, normalize_origin = "turbine")
sim4_mblock = pio.BudgetIO("Data/B_0004_Files/Sim_0003", padeops = True, runid = 0, normalize_origin = "turbine")
sim5_mblock = pio.BudgetIO("Data/B_0004_Files/Sim_0004", padeops = True, runid = 0, normalize_origin = "turbine")
sim6_mblock = pio.BudgetIO("Data/B_0004_Files/Sim_0005", padeops = True, runid = 0, normalize_origin = "turbine")
sim7_mblock = pio.BudgetIO("Data/B_0004_Files/Sim_0006", padeops = True, runid = 0, normalize_origin = "turbine")
sim8_mblock = pio.BudgetIO("Data/B_0004_Files/Sim_0007", padeops = True, runid = 0, normalize_origin = "turbine")
sim9_mblock = pio.BudgetIO("Data/B_0004_Files/Sim_0008", padeops = True, runid = 0, normalize_origin = "turbine")
sim10_mblock = pio.BudgetIO("Data/B_0004_Files/Sim_0009", padeops = True, runid = 0, normalize_origin = "turbine")
sim11_mblock = pio.BudgetIO("Data/B_0004_Files/Sim_0010", padeops = True, runid = 0, normalize_origin = "turbine")
sim12_mblock = pio.BudgetIO("Data/B_0004_Files/Sim_0011", padeops = True, runid = 0, normalize_origin = "turbine")
sim13_mblock = pio.BudgetIO("Data/B_0004_Files/Sim_0012", padeops = True, runid = 0, normalize_origin = "turbine")
sim14_mblock = pio.BudgetIO("Data/B_0004_Files/Sim_0013", padeops = True, runid = 0, normalize_origin = "turbine")
sim15_mblock = pio.BudgetIO("Data/B_0004_Files/Sim_0014", padeops = True, runid = 0, normalize_origin = "turbine")
sim16_mblock = pio.BudgetIO("Data/B_0004_Files/Sim_0015", padeops = True, runid = 0, normalize_origin = "turbine")
sim17_mblock = pio.BudgetIO("Data/B_0004_Files/Sim_0016", padeops = True, runid = 0, normalize_origin = "turbine")

#sim1_hblock = pio.BudgetIO("Data/B_0005_Files/Sim_0000", padeops = True, runid = 0, normalize_origin = "turbine")
#sim2_hblock = pio.BudgetIO("Data/B_0005_Files/Sim_0001", padeops = True, runid = 0, normalize_origin = "turbine")
sim3_hblock = pio.BudgetIO("Data/B_0005_Files/Sim_0002", padeops = True, runid = 0, normalize_origin = "turbine")
sim4_hblock = pio.BudgetIO("Data/B_0005_Files/Sim_0003", padeops = True, runid = 0, normalize_origin = "turbine")
sim5_hblock = pio.BudgetIO("Data/B_0005_Files/Sim_0004", padeops = True, runid = 0, normalize_origin = "turbine")
sim6_hblock = pio.BudgetIO("Data/B_0005_Files/Sim_0005", padeops = True, runid = 0, normalize_origin = "turbine")
sim7_hblock = pio.BudgetIO("Data/B_0005_Files/Sim_0006", padeops = True, runid = 0, normalize_origin = "turbine")
sim8_hblock = pio.BudgetIO("Data/B_0005_Files/Sim_0007", padeops = True, runid = 0, normalize_origin = "turbine")
sim9_hblock = pio.BudgetIO("Data/B_0005_Files/Sim_0008", padeops = True, runid = 0, normalize_origin = "turbine")
sim10_hblock = pio.BudgetIO("Data/B_0005_Files/Sim_0009", padeops = True, runid = 0, normalize_origin = "turbine")
sim11_hblock = pio.BudgetIO("Data/B_0005_Files/Sim_0010", padeops = True, runid = 0, normalize_origin = "turbine")
sim12_hblock = pio.BudgetIO("Data/B_0005_Files/Sim_0011", padeops = True, runid = 0, normalize_origin = "turbine")
sim13_hblock = pio.BudgetIO("Data/B_0005_Files/Sim_0012", padeops = True, runid = 0, normalize_origin = "turbine")
sim14_hblock = pio.BudgetIO("Data/B_0005_Files/Sim_0013", padeops = True, runid = 0, normalize_origin = "turbine")
sim15_hblock = pio.BudgetIO("Data/B_0005_Files/Sim_0014", padeops = True, runid = 0, normalize_origin = "turbine")
sim16_hblock = pio.BudgetIO("Data/B_0005_Files/Sim_0015", padeops = True, runid = 0, normalize_origin = "turbine")
sim17_hblock = pio.BudgetIO("Data/B_0005_Files/Sim_0016", padeops = True, runid = 0, normalize_origin = "turbine")

#ds1m = sim1_mblock.slice(budget_terms = "ubar")
#ds2m = sim2_mblock.slice(budget_terms = "ubar")
ds3m = sim3_mblock.slice(budget_terms = "ubar")
ds4m = sim4_mblock.slice(budget_terms = "ubar")
ds5m = sim5_mblock.slice(budget_terms = "ubar")
ds6m = sim6_mblock.slice(budget_terms = "ubar")
ds7m = sim7_mblock.slice(budget_terms = "ubar")
ds8m = sim8_mblock.slice(budget_terms = "ubar")
ds9m = sim9_mblock.slice(budget_terms = "ubar")
ds10m = sim10_mblock.slice(budget_terms = "ubar")
ds11m = sim11_mblock.slice(budget_terms = "ubar")
ds12m = sim12_mblock.slice(budget_terms = "ubar")
ds13m = sim13_mblock.slice(budget_terms = "ubar")
ds14m = sim14_mblock.slice(budget_terms = "ubar")
ds15m = sim15_mblock.slice(budget_terms = "ubar")
ds16m = sim16_mblock.slice(budget_terms = "ubar")
ds17m = sim17_mblock.slice(budget_terms = "ubar")

#ds1h = sim1_hblock.slice(budget_terms = "ubar")
#ds2h = sim2_hblock.slice(budget_terms = "ubar")
ds3h = sim3_hblock.slice(budget_terms = "ubar")
ds4h = sim4_hblock.slice(budget_terms = "ubar")
ds5h = sim5_hblock.slice(budget_terms = "ubar")
ds6h = sim6_hblock.slice(budget_terms = "ubar")
ds7h = sim7_hblock.slice(budget_terms = "ubar")
ds8h = sim8_hblock.slice(budget_terms = "ubar")
ds9h = sim9_hblock.slice(budget_terms = "ubar")
ds10h = sim10_hblock.slice(budget_terms = "ubar")
ds11h = sim11_hblock.slice(budget_terms = "ubar")
ds12h = sim12_hblock.slice(budget_terms = "ubar")
ds13h = sim13_hblock.slice(budget_terms = "ubar")
ds14h = sim14_hblock.slice(budget_terms = "ubar")
ds15h = sim15_hblock.slice(budget_terms = "ubar")
ds16h = sim16_hblock.slice(budget_terms = "ubar")
ds17h = sim17_hblock.slice(budget_terms = "ubar")

#Centerline Velocities
# c1m = ds1m['ubar'].slice(zlim=0, ylim=0)
# c2m = ds2m['ubar'].slice(zlim=0, ylim=0)
c3m = ds3m['ubar'].slice(zlim=0, ylim=0)
c4m = ds4m['ubar'].slice(zlim=0, ylim=0)
c5m = ds5m['ubar'].slice(zlim=0, ylim=0)
c6m = ds6m['ubar'].slice(zlim=0, ylim=0)
c7m = ds7m['ubar'].slice(zlim=0, ylim=0)
c8m = ds8m['ubar'].slice(zlim=0, ylim=0)
c9m = ds9m['ubar'].slice(zlim=0, ylim=0)
c10m = ds10m['ubar'].slice(zlim=0, ylim=0)
c11m = ds11m['ubar'].slice(zlim=0, ylim=0)
c12m = ds12m['ubar'].slice(zlim=0, ylim=0)
c13m = ds13m['ubar'].slice(zlim=0, ylim=0)
c14m = ds14m['ubar'].slice(zlim=0, ylim=0)
c15m = ds15m['ubar'].slice(zlim=0, ylim=0)
c16m = ds16m['ubar'].slice(zlim=0, ylim=0)
c17m = ds17m['ubar'].slice(zlim=0, ylim=0)

# c1h = ds1h['ubar'].slice(zlim=0, ylim=0)
# c2h = ds2h['ubar'].slice(zlim=0, ylim=0)
c3h = ds3h['ubar'].slice(zlim=0, ylim=0)
c4h = ds4h['ubar'].slice(zlim=0, ylim=0)
c5h = ds5h['ubar'].slice(zlim=0, ylim=0)
c6h = ds6h['ubar'].slice(zlim=0, ylim=0)
c7h = ds7h['ubar'].slice(zlim=0, ylim=0)
c8h = ds8h['ubar'].slice(zlim=0, ylim=0)
c9h = ds9h['ubar'].slice(zlim=0, ylim=0)
c10h = ds10h['ubar'].slice(zlim=0, ylim=0)
c11h = ds11h['ubar'].slice(zlim=0, ylim=0)
c12h = ds12h['ubar'].slice(zlim=0, ylim=0)
c13h = ds13h['ubar'].slice(zlim=0, ylim=0)
c14h = ds14h['ubar'].slice(zlim=0, ylim=0)
c15h = ds15h['ubar'].slice(zlim=0, ylim=0)
c16h = ds16h['ubar'].slice(zlim=0, ylim=0)
c17h = ds17h['ubar'].slice(zlim=0, ylim=0)

# Bypass Velocities
# b1m = ds1m['ubar'].slice(zlim = 9, ylim = 0)
# b2m = ds2m['ubar'].slice(zlim = 9, ylim = 0)
b3m = ds3m['ubar'].slice(zlim = 9, ylim = 0)
b4m = ds4m['ubar'].slice(zlim = 9, ylim = 0)
b5m = ds5m['ubar'].slice(zlim = 9, ylim = 0)
b6m = ds6m['ubar'].slice(zlim = 9, ylim = 0)
b7m = ds7m['ubar'].slice(zlim = 9, ylim = 0)
b8m = ds8m['ubar'].slice(zlim = 9, ylim = 0)
b9m = ds9m['ubar'].slice(zlim = 9, ylim = 0)
b10m = ds10m['ubar'].slice(zlim = 9, ylim = 0)
b11m = ds11m['ubar'].slice(zlim = 9, ylim = 0)
b12m = ds12m['ubar'].slice(zlim = 9, ylim = 0)
b13m = ds13m['ubar'].slice(zlim = 9, ylim = 0)
b14m = ds14m['ubar'].slice(zlim = 9, ylim = 0)
b15m = ds15m['ubar'].slice(zlim = 9, ylim = 0)
b16m = ds16m['ubar'].slice(zlim = 9, ylim = 0)
b17m = ds17m['ubar'].slice(zlim = 9, ylim = 0)

# b1h = ds1h['ubar'].slice(zlim = 2, ylim = 0)
# b2h = ds2h['ubar'].slice(zlim = 2, ylim = 0)
b3h = ds3h['ubar'].slice(zlim = 2, ylim = 0)
b4h = ds4h['ubar'].slice(zlim = 2, ylim = 0)
b5h = ds5h['ubar'].slice(zlim = 2, ylim = 0)
b6h = ds6h['ubar'].slice(zlim = 2, ylim = 0)
b7h = ds7h['ubar'].slice(zlim = 2, ylim = 0)
b8h = ds8h['ubar'].slice(zlim = 2, ylim = 0)
b9h = ds9h['ubar'].slice(zlim = 2, ylim = 0)
b10h = ds10h['ubar'].slice(zlim = 2, ylim = 0)
b11h = ds11h['ubar'].slice(zlim = 2, ylim = 0)
b12h = ds12h['ubar'].slice(zlim = 2, ylim = 0)
b13h = ds13h['ubar'].slice(zlim = 2, ylim = 0)
b14h = ds14h['ubar'].slice(zlim = 2, ylim = 0)
b15h = ds15h['ubar'].slice(zlim = 2, ylim = 0)
b16h = ds16h['ubar'].slice(zlim = 2, ylim = 0)
b17h = ds17h['ubar'].slice(zlim = 2, ylim = 0)

#Plot Wake and Bypass Velocities for Each Sim
# plt.figure(figsize = (9,6))
# plt.plot(ds1m.x, c1m, label = 'Centerline Velocity')
# plt.plot(ds1m.x, b1m, label = 'Velocity at Z = 9')
# plt.legend()
# plt.xlabel('x/D')
# plt.ylabel('ubar')
# plt.title('Wake and Bypass Velocities at 10% Blockage and Ct Prime = -4 ')
# plt.savefig('./wake_bypass_1m')

# plt.figure(figsize = (9,6))
# plt.plot(ds2m.x, c2m, label = 'Centerline Velocity')
# plt.plot(ds2m.x, b2m, label = 'Velocity at Z = 9')
# plt.legend()
# plt.xlabel('x/D')
# plt.ylabel('ubar')
# plt.title('Wake and Bypass Velocities at 10% Blockage and Ct Prime = -3.5 ')
# plt.savefig('./wake_bypass_2m')

plt.figure(figsize = (9,6))
plt.plot(ds3m.x, c3m, label = 'Centerline Velocity')
plt.plot(ds3m.x, b3m, label = 'Velocity at Z = 9')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 10% Blockage and Ct Prime = -3 ')
plt.savefig('./wake_bypass_3m')

plt.figure(figsize = (9,6))
plt.plot(ds4m.x, c4m, label = 'Centerline Velocity')
plt.plot(ds4m.x, b4m, label = 'Velocity at Z = 9')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 10% Blockage and Ct Prime = -2.5 ')
plt.savefig('./wake_bypass_4m')

plt.figure(figsize = (9,6))
plt.plot(ds5m.x, c5m, label = 'Centerline Velocity')
plt.plot(ds5m.x, b5m, label = 'Velocity at Z = 9')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 10% Blockage and Ct Prime = -2 ')
plt.savefig('./wake_bypass_5m')

plt.figure(figsize = (9,6))
plt.plot(ds6m.x, c6m, label = 'Centerline Velocity')
plt.plot(ds6m.x, b6m, label = 'Velocity at Z = 9')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 10% Blockage and Ct Prime = -1.5 ')
plt.savefig('./wake_bypass_6m')

plt.figure(figsize = (9,6))
plt.plot(ds7m.x, c7m, label = 'Centerline Velocity')
plt.plot(ds7m.x, b7m, label = 'Velocity at Z = 9')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 10% Blockage and Ct Prime = -1 ')
plt.savefig('./wake_bypass_7m')

plt.figure(figsize = (9,6))
plt.plot(ds8m.x, c8m, label = 'Centerline Velocity')
plt.plot(ds8m.x, b8m, label = 'Velocity at Z = 9')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 10% Blockage and Ct Prime = -0.5 ')
plt.savefig('./wake_bypass_8m')

plt.figure(figsize = (9,6))
plt.plot(ds9m.x, c9m, label = 'Centerline Velocity')
plt.plot(ds9m.x, b9m, label = 'Velocity at Z = 9')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 10% Blockage and Ct Prime = 0 ')
plt.savefig('./wake_bypass_9m')

plt.figure(figsize = (9,6))
plt.plot(ds10m.x, c10m, label = 'Centerline Velocity')
plt.plot(ds10m.x, b10m, label = 'Velocity at Z = 9')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 10% Blockage and Ct Prime = 0.5 ')
plt.savefig('./wake_bypass_10m')

plt.figure(figsize = (9,6))
plt.plot(ds11m.x, c11m, label = 'Centerline Velocity')
plt.plot(ds11m.x, b11m, label = 'Velocity at Z = 9')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 10% Blockage and Ct Prime = 1 ')
plt.savefig('./wake_bypass_11m')

plt.figure(figsize = (9,6))
plt.plot(ds12m.x, c12m, label = 'Centerline Velocity')
plt.plot(ds12m.x, b12m, label = 'Velocity at Z = 9')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 10% Blockage and Ct Prime = 1.5 ')
plt.savefig('./wake_bypass_12m')

plt.figure(figsize = (9,6))
plt.plot(ds13m.x, c13m, label = 'Centerline Velocity')
plt.plot(ds13m.x, b13m, label = 'Velocity at Z = 9')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 10% Blockage and Ct Prime = 2.0 ')
plt.savefig('./wake_bypass_13m')

plt.figure(figsize = (9,6))
plt.plot(ds14m.x, c14m, label = 'Centerline Velocity')
plt.plot(ds14m.x, b14m, label = 'Velocity at Z = 9')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 10% Blockage and Ct Prime = 2.5 ')
plt.savefig('./wake_bypass_14m')

plt.figure(figsize = (9,6))
plt.plot(ds15m.x, c15m, label = 'Centerline Velocity')
plt.plot(ds15m.x, b15m, label = 'Velocity at Z = 9')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 10% Blockage and Ct Prime = 3 ')
plt.savefig('./wake_bypass_15m')

plt.figure(figsize = (9,6))
plt.plot(ds16m.x, c16m, label = 'Centerline Velocity')
plt.plot(ds16m.x, b16m, label = 'Velocity at Z = 9')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 10% Blockage and Ct Prime = 3.5 ')
plt.savefig('./wake_bypass_16m')

plt.figure(figsize = (9,6))
plt.plot(ds17m.x, c12m, label = 'Centerline Velocity')
plt.plot(ds17m.x, b12m, label = 'Velocity at Z = 9')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 10% Blockage and Ct Prime = 4 ')
plt.savefig('./wake_bypass_17m')

# plt.figure(figsize = (9,6))
# plt.plot(ds1h.x, c1h, label = 'Centerline Velocity')
# plt.plot(ds1h.x, b1h, label = 'Velocity at Z = 2')
# plt.legend()
# plt.xlabel('x/D')
# plt.ylabel('ubar')
# plt.title('Wake and Bypass Velocities at 35% Blockage and Ct Prime = -4 ')
# plt.savefig('./wake_bypass_1h')

# plt.figure(figsize = (9,6))
# plt.plot(ds2h.x, c2h, label = 'Centerline Velocity')
# plt.plot(ds2h.x, b2h, label = 'Velocity at Z = 2')
# plt.legend()
# plt.xlabel('x/D')
# plt.ylabel('ubar')
# plt.title('Wake and Bypass Velocities at 35% Blockage and Ct Prime = -3.5 ')
# plt.savefig('./wake_bypass_2h')

plt.figure(figsize = (9,6))
plt.plot(ds3h.x, c3h, label = 'Centerline Velocity')
plt.plot(ds3h.x, b3h, label = 'Velocity at Z = 2')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 35% Blockage and Ct Prime = -3 ')
plt.savefig('./wake_bypass_3h')

plt.figure(figsize = (9,6))
plt.plot(ds4h.x, c4h, label = 'Centerline Velocity')
plt.plot(ds4h.x, b4h, label = 'Velocity at Z = 2')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 35% Blockage and Ct Prime = -2.5 ')
plt.savefig('./wake_bypass_4h')

plt.figure(figsize = (9,6))
plt.plot(ds5h.x, c5h, label = 'Centerline Velocity')
plt.plot(ds5h.x, b5h, label = 'Velocity at Z = 2')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 35% Blockage and Ct Prime = -2 ')
plt.savefig('./wake_bypass_5h')

plt.figure(figsize = (9,6))
plt.plot(ds6h.x, c6h, label = 'Centerline Velocity')
plt.plot(ds6h.x, b6h, label = 'Velocity at Z = 2')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 35% Blockage and Ct Prime = -1.5 ')
plt.savefig('./wake_bypass_6h')

plt.figure(figsize = (9,6))
plt.plot(ds7h.x, c7h, label = 'Centerline Velocity')
plt.plot(ds7h.x, b7h, label = 'Velocity at Z = 2')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 35% Blockage and Ct Prime = -1 ')
plt.savefig('./wake_bypass_7h')

plt.figure(figsize = (9,6))
plt.plot(ds8h.x, c8h, label = 'Centerline Velocity')
plt.plot(ds8h.x, b8h, label = 'Velocity at Z = 2')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 35% Blockage and Ct Prime = -0.5 ')
plt.savefig('./wake_bypass_8h')

plt.figure(figsize = (9,6))
plt.plot(ds9h.x, c9h, label = 'Centerline Velocity')
plt.plot(ds9h.x, b9h, label = 'Velocity at Z = 2')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 35% Blockage and Ct Prime = 0 ')
plt.savefig('./wake_bypass_9h')

plt.figure(figsize = (9,6))
plt.plot(ds10h.x, c10h, label = 'Centerline Velocity')
plt.plot(ds10h.x, b10h, label = 'Velocity at Z = 2')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 35% Blockage and Ct Prime = 0.5 ')
plt.savefig('./wake_bypass_10h')

plt.figure(figsize = (9,6))
plt.plot(ds11h.x, c11h, label = 'Centerline Velocity')
plt.plot(ds11h.x, b11h, label = 'Velocity at Z = 2')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 35% Blockage and Ct Prime = 1 ')
plt.savefig('./wake_bypass_11h')

plt.figure(figsize = (9,6))
plt.plot(ds12h.x, c12h, label = 'Centerline Velocity')
plt.plot(ds12h.x, b12h, label = 'Velocity at Z = 2')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 35% Blockage and Ct Prime = 1.5 ')
plt.savefig('./wake_bypass_12h')

plt.figure(figsize = (9,6))
plt.plot(ds13h.x, c13h, label = 'Centerline Velocity')
plt.plot(ds13h.x, b13h, label = 'Velocity at Z = 2')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 35% Blockage and Ct Prime = 2.0 ')
plt.savefig('./wake_bypass_13h')

plt.figure(figsize = (9,6))
plt.plot(ds14h.x, c14h, label = 'Centerline Velocity')
plt.plot(ds14h.x, b14h, label = 'Velocity at Z = 2')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 35% Blockage and Ct Prime = 2.5 ')
plt.savefig('./wake_bypass_14h')

plt.figure(figsize = (9,6))
plt.plot(ds15h.x, c15h, label = 'Centerline Velocity')
plt.plot(ds15h.x, b15h, label = 'Velocity at Z = 2')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 35% Blockage and Ct Prime = 3 ')
plt.savefig('./wake_bypass_15h')

plt.figure(figsize = (9,6))
plt.plot(ds16h.x, c16h, label = 'Centerline Velocity')
plt.plot(ds16h.x, b16h, label = 'Velocity at Z = 2')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 35% Blockage and Ct Prime = 3.5 ')
plt.savefig('./wake_bypass_16h')

plt.figure(figsize = (9,6))
plt.plot(ds17h.x, c12h, label = 'Centerline Velocity')
plt.plot(ds17h.x, b12h, label = 'Velocity at Z = 2')
plt.legend()
plt.xlabel('x/D')
plt.ylabel('ubar')
plt.title('Wake and Bypass Velocities at 35% Blockage and Ct Prime = 4 ')
plt.savefig('./wake_bypass_17h')

#Export Velocities
np.save('./c3m.npy', c3m)
np.save('./c4m.npy', c4m)
np.save('./c5m.npy', c5m)
np.save('./c6m.npy', c6m)
np.save('./c7m.npy', c7m)
np.save('./c8m.npy', c8m)
np.save('./c9m.npy', c9m)
np.save('./c10m.npy', c10m)
np.save('./c11m.npy', c11m)
np.save('./c12m.npy', c12m)
np.save('./c13m.npy', c13m)
np.save('./c14m.npy', c14m)
np.save('./c15m.npy', c15m)
np.save('./c16m.npy', c16m)
np.save('./c17m.npy', c17m)
np.save('./b3m.npy', b3m)
np.save('./b4m.npy', b4m)
np.save('./b5m.npy', b5m)
np.save('./b6m.npy', b6m)
np.save('./b7m.npy', b7m)
np.save('./b8m.npy', b8m)
np.save('./b9m.npy', b9m)
np.save('./b10m.npy', b10m)
np.save('./b11m.npy', b11m)
np.save('./b12m.npy', b12m)
np.save('./b13m.npy', b13m)
np.save('./b14m.npy', b14m)
np.save('./b15m.npy', b15m)
np.save('./b16m.npy', b16m)
np.save('./b17m.npy', b17m)
np.save('./c3h.npy', c3h)
np.save('./c4h.npy', c4h)
np.save('./c5h.npy', c5h)
np.save('./c6h.npy', c6h)
np.save('./c7h.npy', c7h)
np.save('./c8h.npy', c8h)
np.save('./c9h.npy', c9h)
np.save('./c10h.npy', c10h)
np.save('./c11h.npy', c11h)
np.save('./c12h.npy', c12h)
np.save('./c13h.npy', c13h)
np.save('./c14h.npy', c14h)
np.save('./c15h.npy', c15h)
np.save('./c16h.npy', c16h)
np.save('./c17h.npy', c17h) 
np.save('./b3h.npy', b3h)
np.save('./b4h.npy', b4h)
np.save('./b5h.npy', b5h)
np.save('./b6h.npy', b6h)
np.save('./b7h.npy', b7h)
np.save('./b8h.npy', b8h)   
np.save('./b9h.npy', b9h)
np.save('./b10h.npy', b10h)
np.save('./b11h.npy', b11h)
np.save('./b12h.npy', b12h)
np.save('./b13h.npy', b13h)
np.save('./b14h.npy', b14h) 
np.save('./b15h.npy', b15h)
np.save('./b16h.npy', b16h)
np.save('./b17h.npy', b17h)
np.save('./xvals.npy', ds3m.x)